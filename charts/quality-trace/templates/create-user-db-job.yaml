{{- if not .Values.postgresql.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: create-user-database
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: create-user-database
    spec:
    {{- if .Values.externalPostgresql.qualitytrace.existingSecret }}
      initContainers:
      - name: init-secret
        image: ghcr.io/kube-tarian/helmrepo-supporting-tools/busybox:1.34.1
        command: ['sh', '-c', 'echo "$(cat /mnt/secrets/password)" > /mnt/config/password']
        volumeMounts:
        - name: secret-volume
          mountPath: /mnt/secrets
          readOnly: true
        - name: config-volume
          mountPath: /mnt/config
    {{- end }}
      containers:
      - name: postgresql-client
        image: {{ .Values.postgresql.image.registry }}/{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}
        command:
        {{- if not .Values.externalPostgresql.qualitytrace.existingSecret }}
          - "/bin/bash"
          - "-c"
          - |
            psql -h {{ .Values.externalPostgresql.host }} -p 5432 -U postgres -f /script/create-database.sql
        {{- else }}
          - "/bin/bash"
          - "-c"
          - |
            export DB_PASSWORD=$(cat /mnt/config/password) &&
            psql -h {{ .Values.externalPostgresql.host }} -p 5432 -U postgres -v db_password=$DB_PASSWORD -f /script/create-database.sql
        {{- end }}
        env:
          - name: PGPASSWORD
            {{- if not .Values.externalPostgresql.existingSecret }}
            value: "{{ .Values.externalPostgresql.postgresqlPassword }}"
            {{- else }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.externalPostgresql.existingSecret.name }}
                key: {{ .Values.externalPostgresql.existingSecret.passwordKey }}
            {{- end }}
        volumeMounts:
          {{- if .Values.externalPostgresql.qualitytrace.existingSecret }}
          - name: config-volume
            mountPath: /mnt/config
          {{- end }}
          - name: script-volume
            mountPath: /script
            readOnly: true
      restartPolicy: Never
      volumes:
        {{- if .Values.externalPostgresql.qualitytrace.existingSecret }}
        - name: secret-volume
          secret:
            secretName: {{.Values.externalPostgresql.qualitytrace.existingSecret.name }}
        - name: config-volume
          emptyDir: {}
        {{- end }}
        - name: script-volume
          configMap:
            name: postgresql-query
{{- end }}


